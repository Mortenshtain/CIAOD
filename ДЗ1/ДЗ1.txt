#include <iostream>
#include <chrono>
#include <cmath>
using namespace std;

int main() {
    for(int i=2; i<7; i++){
    	int n = pow(10, i);
    	int comparisons;
    	int moves;
    	int* mass = new int[n];
    	for (int numIter = 0; numIter < n; numIter++) {
    		mass[numIter] = rand() % 100;
    	}
    	auto start = std::chrono::steady_clock::now();
    
    	for (int firstIter = 0; firstIter < n - 1; firstIter++){
    		for (int secondIter = firstIter + 1; secondIter < n; secondIter++) {
    			if (mass[firstIter] > mass[secondIter]) {
    				comparisons++;
    				swap(mass[firstIter], mass[secondIter]);
    				moves++;
    			}
    			else { comparisons++; }
    		}
    	}
    
    	auto end = std::chrono::steady_clock::now();
    	auto work_time = std::chrono::duration_cast<std::chrono::milliseconds>(end - start);
    	cout << "n = " << n << "    ";
    	cout << "time = " << work_time.count() << " milliseconds" <<  "    ";
    	cout << "comparisons = " << comparisons << "    ";
    	cout << "moves = " << moves << endl;
    }
	system("pause"); return 0;
}
